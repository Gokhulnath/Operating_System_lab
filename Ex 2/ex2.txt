
//1

#include<stdio.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<fcntl.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>

void main(int argc,char *args[])
{ 
  
  if(argc==4)
{
	if(strcmp(args[1],"-i")==0)
	{
		printf("\n can the destination file be overwritten?(y or n)");
		char op;
		scanf("%c",&op);
  		if(op=='y')
		{
			int f1,f2; 
  			char *content=(char *)calloc(1000,sizeof(char)); 
  			f1=open(args[2],O_RDONLY); 
  			f2=open(args[3],O_WRONLY); 
  			if(f1<0) 
			{ 
		 		exit(1); 
			}  
 			if(f2<0) 
			{ 
 				exit(1); 
			}  
  		int s1=read(f1,content,1000000); 
 		content[s1] = '\0'; 
 		s1=write(f2,content,strlen(content));
		printf("\nsuccess");
		close(f1);
  		close(f2);
 		}
	 }
	else if(strcmp(args[1],"-f")==0)
	{
		int f1,f2; 
  			char *content=(char *)calloc(1000,sizeof(char)); 
  			f1=open(args[2],O_RDONLY); 
  			f2=open(args[3],O_WRONLY); 
  			if(f1<0) 
			{ 
		 		exit(1); 
			}  
 			if(f2<0) 
			{ 
 				exit(1); 
			}  
  		int s1=read(f1,content,1000000); 
 		content[s1] = '\0'; 
 		s1=write(f2,content,strlen(content));
		printf("\nsuccess");
		close(f1);
  		close(f2);
	}
}
else
{
int f1,f2; 
  char *content=(char *)calloc(1000,sizeof(char)); 
  f1=open(args[1],O_RDONLY); 
  f2=open(args[2],O_WRONLY); 
  if(f1<0) 
	{ 
		perror(" ");
 		exit(1); 
	}  
 if(f2<0) 
	{ 
		perror(" ");
 		exit(1); 
	}  
  int s1=read(f1,content,1000); 
  content[s1] = '\0'; 
  s1=write(f2,content,strlen(content));
  printf("\nsuccess\n");
  close(f1);
  close(f2);
}
}





/*sample input/output
Gokhul@ubuntu:~/Desktop$ cat sample
hello
nice to
meet you too
Gokhul@ubuntu:~/Desktop$ gcc hello.c -o hello
Gokhul@ubuntu:~/Desktop$ cat>f2
^C
Gokhul@ubuntu:~/Desktop$ ./hello -i sample f2

 can the destination file be overwritten?(y or n)y

success
Gokhul@ubuntu:~/Desktop$ cat f2
hello
nice to
meet you too
Gokhul@ubuntu:~/Desktop$ cat>f2
^C
Gokhul@ubuntu:~/Desktop$ ./hello -f sample f2

success
Gokhul@ubuntu:~/Desktop$ cat f2
hello
nice to
meet you too
Gokhul@ubuntu:~/Desktop$ ./hello sample f2

success
*/





//2
#include<stdio.h>
#include<dirent.h>
#include<string.h>
void main(int argc,char *argv[])
{
	
	if(strcmp(argv[1],"-R")==0)
	{
		struct dirent *de;
		DIR *dr=opendir(argv[2]);
		if(dr!=NULL)
		{
			while((de=readdir(dr))!=NULL)
				{
				printf("%s\n",de->d_name);
				struct dirent *in;
				DIR *dir=opendir(de->d_name);
				if(dir)
				{
					while((in=readdir(dir))!=NULL)
						printf("\t\t%s\n",in->d_name);
					closedir(dir);
				}
				}
		}
		else
			printf("not Found\n");
		closedir(dr);	
	}
	else if(argc==2)
	{
		struct dirent *de;
		DIR *dr=opendir(argv[1]);
		if(dr==NULL)
		{
			printf("couldnt open");
		}
		while((de=readdir(dr))!=NULL)
			printf("%s\n",de->d_name);
		closedir(dr);
	}
	
}




/*sample input/output

Gokhul@ubuntu:~/Desktop$ ./hello -R  .
.
		.
		..
		a.out
		hello
		list.c
		sample.c
		os-ex2.txt
		dest.txt
		sample
		list
		051-Gokhul-ex1.txt
		hello.c
		recursive
..
		.
		..
		Templates
		Desktop
		f1.txt
		a.out
		.local
		.mozilla
		.ICEauthority
		.oracle_jre_usage
		.xsession-errors
		.bash_profile
		Downloads
		Documents
		Public
		Music
		.config
		.bash_history
		.bashrc
		.bash_logout
		.gnupg
		.cache
		.dmrc
		.gconf
		.xsession-errors.old
		Videos
		.gnome2
		hello.c
		.Xauthority
		Pictures
a.out
hello
list.c
sample.c
os-ex2.txt
dest.txt
sample
list
051-Gokhul-ex1.txt
hello.c
recursive
		.
		..
		2-1.c
		source.txt
		ex1.txt
		prog.c
		hello.c
Gokhul@ubuntu:~/Desktop$ ./hello .
.
..
a.out
hello
list.c
sample.c
os-ex2.txt
dest.txt
sample
list
051-Gokhul-ex1.txt
hello.c
recursive
*/





//3
#include<stdio.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<fcntl.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>
void main(int argc,char *argv[])
{

if(argc==4)
{
	if(strcmp(argv[1],"-v")==0)
	{
		char *f1=argv[3];
		int s1=open(f1,O_RDONLY);
		if(s1==-1)
		{
			printf("Error");
			exit(-1);
		}
		char temp,line[100];
		int j=0,i=0,count=0;
		while(j=read(s1,&temp,sizeof(char))!=0)
		{
			j++;
			if(temp!='\n')
			{
				line[i]=temp;
				i++;
			}
			else
			{
				count++;
				if(strstr(line,argv[2])==NULL)
				printf("%s\n",line);
				strcpy(line,"");
				i=0;
			}
		}
		close(s1);
	}
}
else
{
	char *f1=argv[2];
	int s1=open(f1,O_RDONLY);
    if (s1==-1)
    {
        printf("Error");
		exit(-1);
    }
	char temp,line[100];
	int j=0,i=0,count=0;
	while(j=read(s1,&temp,sizeof(char))!=0)
	{
		j++;
		if(temp!='\n')
		{
			line[i]=temp;
			i++;
		}
		else
		{
			count++;
			if(strstr(line,argv[1])!=NULL)
				printf("%s\n",line);
			strcpy(line,"");
			i=0;
		}
	}
	close(s1);
}
}


/* sample input output
Gokhul@ubuntu:~$ gcc hello.c -o hello
Gokhul@ubuntu:~$ ./hello -v to sample
hello
Gokhul@ubuntu:~$ ./hello to sample
nice to
meet you too
*/